@model IPagedList<Notification>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Manage Notifications";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var filter = Context.Request.Query["search"].ToString();
}

@section Styles {
    <style>
        h2.page-header {
            font-size: 2rem;
            color: #0d6efd;
            font-weight: bold;
            border-left: 5px solid #0d6efd;
            padding-left: 15px;
            margin-bottom: 30px;
            display: flex;
            align-items: center;
        }

            h2.page-header i {
                margin-right: 10px;
            }

        .text-truncate {
            max-width: 250px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .badge-consumer {
            background-color: #e2e3e5;
            color: #333;
            font-size: 0.85rem;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
    </style>
}

<h2 class="page-header"><i class="bi bi-bell-fill text-warning"></i> Manage Notifications</h2>

<form method="get" class="mb-3 row g-2">
    <div class="col-md-4">
        <input type="text" name="search" class="form-control" placeholder="Search title or message..." value="@filter" />
    </div>
    <div class="col-md-auto">
        <button type="submit" class="btn btn-outline-primary">
            <i class="bi bi-search"></i> Filter
        </button>
    </div>
</form>



<div class="mb-4 d-flex gap-2 flex-wrap">
    <a class="btn btn-primary" asp-action="Create"><i class="bi bi-plus-circle me-1"></i> New Notification</a>
    <a class="btn btn-success" asp-action="SendSms"><i class="bi bi-chat-dots-fill me-1"></i> Send SMS for Bills</a>
    <a class="btn btn-secondary" asp-action="Archived"><i class="bi bi-archive-fill me-1"></i> View Archived</a>
</div>

<div class="table-responsive">
    <table class="table table-bordered align-middle table-hover shadow-sm">
        <thead class="text-center">
            <tr>
                <th>To</th>
                <th>Title</th>
                <th>Message</th>
                <th>Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var n in Model)
            {
                <tr class="@(n.IsRead ? "" : "fw-bold")">
                    <td>
                        @if (n.Consumer != null)
                        {
                            <span class="badge badge-consumer">@n.Consumer.FullName</span>
                        }
                        else
                        {
                            <span class="badge bg-info text-dark">All Consumers</span>
                        }
                    </td>
                    <td>@n.Title</td>
                    <td class="text-truncate">
                        <a href="javascript:void(0);" onclick="showMessage('@n.Title', `@n.Message.Replace("`", "\\`")`)">
                            <i class="bi bi-eye-fill text-primary"></i> View
                        </a>
                    </td>
                    <td>@n.CreatedAt.ToString("yyyy-MM-dd hh:mm tt")</td>
                    <td class="text-center">
                        <form asp-action="Archive" asp-route-id="@n.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-warning" title="Archive">
                                <i class="bi bi-archive"></i>
                            </button>
                        </form>
                        <a asp-action="Delete" asp-route-id="@n.Id" class="btn btn-sm btn-danger" title="Delete">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.PageCount > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-search="@filter">Previous</a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" asp-route-pageNumber="@i" asp-route-search="@filter">@i</a>
                </li>
            }
            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-search="@filter">Next</a>
            </li>
        </ul>
    </nav>
}

<!-- Modal -->
<div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Message Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalMessage">
                Full message content will appear here.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showMessage(title, message) {
            document.getElementById("modalTitle").innerText = title;
            document.getElementById("modalMessage").innerText = message;
            new bootstrap.Modal(document.getElementById("messageModal")).show();
        }
    </script>
}
