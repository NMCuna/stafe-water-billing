@{
    ViewData["Title"] = "Manage Consumers";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/manage-consumers.css" asp-append-version="true" />
}


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2 class="page-header"><i class="bi bi-people-fill"></i> Manage Consumers</h2>

<!-- 🔎 Filter/Search Form -->
<form method="get" class="filter-form align-items-center">
    <!-- Search by name -->
    <div class="input-group">
        <span class="input-group-text bg-primary text-white"><i class="bi bi-search"></i></span>
        <input type="text" id="searchBox" name="searchTerm" value="@ViewData["searchTerm"]" placeholder="Search by name..." class="form-control" />
    </div>

    <!-- Filter by Barangay -->
    <div class="input-group">
        <span class="input-group-text bg-success text-white"><i class="bi bi-geo-alt-fill"></i></span>
        <select id="addressDropdown" name="addressFilter" class="form-select">
            <option value="">All Barangays</option>
            @{
                var selectedAddress = ViewData["addressFilter"]?.ToString();
                var barangays = new[] { "Balidbid", "Balud", "Hilantagaan", "Kinatarcan", "Marikaban", "Langub", "Okoy", "Poblacion", "Pooc", "Talisay", "Ticad" };
                foreach (var brgy in barangays)
                {
                    var isSelected = selectedAddress == brgy ? "selected" : "";
                    @Html.Raw($"<option value=\"{brgy}\" {isSelected}>{brgy}</option>")
                }
            }
        </select>
    </div>
</form>

<a asp-action="CreateConsumer" class="btn-glow mb-3">
    <i class="bi bi-person-plus-fill"></i> Add New Consumer
</a>

<!-- 📋 Consumer Table -->
<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Full Name</th>
            <th>Account Type</th>
            <th>Meter No</th>
            <th>Home Address</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var consumer in Model)
        {
            <tr>
                <td>@consumer.Id</td>
                <td>@(consumer.FirstName + " " + consumer.LastName)</td>
                <td>@consumer.AccountType</td>
                <td>@consumer.MeterNo</td>
                <td>@consumer.HomeAddress</td>
                <td class="action-buttons">
                    <a asp-action="ConsumerDetails" asp-route-id="@consumer.Id" class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" title="View Consumer">
                        <i class="bi bi-eye"></i> View
                    </a>
                    <a asp-action="EditConsumer" asp-route-id="@consumer.Id" class="btn btn-sm btn-outline-warning" data-bs-toggle="tooltip" title="Edit Consumer">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>
                    <a asp-action="DeleteConsumer" asp-route-id="@consumer.Id" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="Delete Consumer">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- 📄 Pagination -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Consumers"
                   asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-searchTerm="@ViewData["searchTerm"]"
                   asp-route-addressFilter="@ViewData["addressFilter"]">Previous</a>
            </li>

            @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link"
                       asp-action="Consumers"
                       asp-route-page="@i"
                       asp-route-searchTerm="@ViewData["searchTerm"]"
                       asp-route-addressFilter="@ViewData["addressFilter"]">@i</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Consumers"
                   asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-searchTerm="@ViewData["searchTerm"]"
                   asp-route-addressFilter="@ViewData["addressFilter"]">Next</a>
            </li>
        </ul>
    </nav>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector(".filter-form");
            const searchBox = document.getElementById("searchBox");
            const addressDropdown = document.getElementById("addressDropdown");

            let timeoutId;

            // Auto-submit on search input
            searchBox.addEventListener("input", function () {
                clearTimeout(timeoutId);
                if (searchBox.value.trim() === "") {
                    form.submit(); return;
                }
                timeoutId = setTimeout(() => form.submit(), 500);
            });

            // Auto-submit on dropdown change
            addressDropdown.addEventListener("change", function () {
                form.submit();
            });

            // Activate tooltips
            const tooltips = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltips.map(el => new bootstrap.Tooltip(el));
        });
                if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.body.classList.add('dark-mode');
        }

    </script>
}
